{"version":3,"sources":["index.js","App.js","App.module.scss","pages/home/index.js","pages/home/style.module.scss","utils/transform-worker.js","utils/modules.js","../ //.js$","reportWebVitals.js"],"names":["ReactDOM","render","StrictMode","document","getElementById","console","log","useLocalStorageState","key","initialValue","storeValue","React","useMemo","JSON","parse","localStorage","getItem","_","useState","v","setVal","initRef","useRef","useLayoutEffect","current","setItem","stringify","TextArea","Header","Content","Footer","CONFIG","axiosRequest","commonConfig","responseData","splitModule","prefix","suffix","App","loading","setLoading","jsonText","setJsonText","type","config","transform","setTransform","setType","urlText","setUrlText","jsText","setJsText","useEffect","onSearch","useCallback","val","eval","res","status","json","axios","get","trim","responseType","withCredentials","data","error","method","toUpperCase","url","response","String","locale","zh_CN","theme","className","css","header","logo","Item","label","wrapperCol","style","width","value","select","onChange","Object","keys","modules","map","name","Option","content","paramsEditor","mode","title","placement","marginLeft","icon","SettingOutlined","btns","Search","e","target","enterButton","placeholder","search","jsTextareaWrapper","destroyTooltipOnHide","autoFocus","rows","trigger","readOnly","jsTextarea","padding","body","spinning","wrapperClassName","delay","onJsonTextChange","module","exports","worker","TransformWorker","promiseWorker","PromiseWorker","window","jsonlint","FloatBtns","text","copyStatus","setCopyStatus","timerRef","copy","clearTimeout","setTimeout","floatBtns","onVisibleChange","CopyFilled","size","onClick","defaultJsonText","defaultValue","jsonTextState","result","setResult","transforming","setTransforming","postMessage","then","catch","err","finally","container","jsonEditor","editorProps","$blockScrolling","transfroming","LoadingOutlined","fontSize","color","wrapperResult","resultEditor","tabBarGutter","tabPosition","defaultActiveKey","tabBarExtraContent","zip","JSZIP","forEach","file","generateAsync","saveAs","fileName","TabPane","tab","subEditor","Worker_fn","Worker","modulesRequire","require","reduce","basename","extname","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","resolve","onPerfEntry"],"mappings":"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","file":"static/js/main.d0a228de.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport css from \"./App.module.scss\";\nimport axios from \"axios\";\nimport {\n  Layout,\n  Input,\n  Select,\n  ConfigProvider,\n  Form,\n  Space,\n  Button,\n  Tooltip,\n  Popover,\n  Spin,\n  notification,\n  message,\n} from \"antd\";\nimport zh_CN from \"antd/lib/locale/zh_CN\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport isHotKey from \"is-hotkey\";\nimport HomePage from \"./pages/home\";\nimport modules from \"./utils/modules\";\nimport AceEditor from \"react-ace\";\n\nconst useLocalStorageState = (key, initialValue) => {\n  const storeValue = React.useMemo(() => {\n    try {\n      return JSON.parse(localStorage.getItem(`localStorage_${key}`));\n    } catch (_) {}\n    return null;\n  }, []);\n  const [v, setVal] = React.useState(storeValue || initialValue);\n  const initRef = React.useRef(false);\n\n  React.useLayoutEffect(() => {\n    if (!initRef.current) {\n      initRef.current = true;\n      return;\n    }\n    localStorage.setItem(`localStorage_${key}`, JSON.stringify(v));\n  }, [v]);\n\n  return [v, setVal];\n};\n\nconst { TextArea } = Input;\nconst { Header, Content, Footer } = Layout;\n\nconst CONFIG = JSON.stringify(\n  {\n    axiosRequest: \"axios\",\n    commonConfig: { responseData: true },\n    splitModule: true,\n    prefix: `/* eslint-disable */\\n// @ts-nocheck\\n`,\n    suffix: \"\",\n  },\n  null,\n  2\n);\n\nfunction App() {\n  const [loading, setLoading] = React.useState(false);\n  const [jsonText, setJsonText] = React.useState(\"{}\");\n  const [transform, setTransform] = useLocalStorageState(\"transform-type\", {\n    type: \"to-swagger-axios\",\n    config: CONFIG,\n  });\n  const [type, setType] = useLocalStorageState(\"import-type\", \"url\");\n  const [urlText, setUrlText] = useLocalStorageState(\"import-value-url\", \"\");\n  const [jsText, setJsText] = useLocalStorageState(\"import-value-js\", \"\");\n\n  React.useEffect(() => {\n    // const handle = (evt) => {\n    //   if (evt.target.tagName !== \"TEXTAREA\" && isHotKey(\"mod+f\", evt)) {\n    //     evt.preventDefault();\n    //     message.info(\"建议在编辑器中进行搜索，选中编辑器，然后键入搜索快捷键\");\n    //   }\n    // };\n    // document.addEventListener(\"keydown\", handle);\n    // return () => {\n    //   document.removeEventListener(\"keydown\", handle);\n    // };\n  });\n\n  const onSearch = React.useCallback(\n    async (val) => {\n      setLoading(true);\n      try {\n        if (type === \"js\") {\n          val = jsText;\n          if (!val) {\n            return;\n          }\n          const res = await eval(val);\n          if (res.status === 200) {\n            setJsonText(JSON.stringify(await res.json(), null, 2));\n          }\n        } else {\n          val = urlText;\n          if (!val) {\n            return;\n          }\n          const res = await axios.get(val.trim(), {\n            responseType: \"json\",\n            withCredentials: true,\n          });\n          if (res.status === 200) {\n            setJsonText(JSON.stringify(res.data, null, 2));\n          }\n        }\n      } catch (e) {\n        message.error(\n          e.config\n            ? `${e.config.method?.toUpperCase()} ${e.config.url} (${\n                e.response?.status || \"-\"\n              })`\n            : String(e)\n        );\n      } finally {\n        setLoading(false);\n      }\n    },\n    [type, urlText, jsonText]\n  );\n\n  React.useEffect(() => {\n    onSearch();\n  }, []);\n\n  const config = React.useMemo(() => {\n    try {\n      return JSON.parse(transform.config);\n    } catch (_) {}\n    return null;\n  }, [transform.config]);\n\n  return (\n    <ConfigProvider locale={zh_CN} theme={\"light\"}>\n      <Layout className={css.App} theme={\"light\"}>\n        <Header className={css.header}>\n          <span className={css.logo}>Transform json schema</span>\n\n          <Form.Item label={\"转换类型\"} wrapperCol={{ style: { width: 150 } }}>\n            <Select\n              value={transform.type}\n              className={css.select}\n              onChange={(value) => {\n                setTransform((v) => ({ ...v, type: value }));\n              }}\n            >\n              {Object.keys(modules).map((name) => (\n                <Select.Option key={name} value={name}>\n                  {name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Popover\n            content={\n              <AceEditor\n                className={css.paramsEditor}\n                value={transform.config}\n                onChange={(value) => {\n                  setTransform((v) => ({ ...v, config: value }));\n                }}\n                mode={\"json\"}\n                theme={\"github\"}\n              />\n            }\n          >\n            <Tooltip title={\"设置转换配置\"} placement={\"right\"}>\n              <Button style={{ marginLeft: 10 }} icon={<SettingOutlined />} />\n            </Tooltip>\n          </Popover>\n\n          <div className={css.btns}>\n            <Select value={type} onChange={(v) => setType(v)}>\n              <Select.Option value={\"url\"}>从 URL 导入</Select.Option>\n              <Select.Option value={\"js\"}>从 JS 脚本 导入</Select.Option>\n            </Select>\n            {type === \"url\" && (\n              <Input.Search\n                value={urlText}\n                onChange={(e) => setUrlText(e.target.value)}\n                enterButton=\"导入\"\n                placeholder={\"从 URL 导入\"}\n                onSearch={onSearch}\n                className={css.search}\n              />\n            )}\n            {type === \"js\" && (\n              <div className={css.jsTextareaWrapper}>\n                <Popover\n                  destroyTooltipOnHide\n                  content={\n                    <TextArea\n                      autoFocus\n                      style={{ width: 400 }}\n                      rows={10}\n                      value={jsText}\n                      onChange={(e) => setJsText(e.target.value)}\n                      placeholder={\n                        \"输入 JS 请求脚本，具体可以使用 Chrome Network 中的 Copy as fetch\"\n                      }\n                    />\n                  }\n                  trigger={\"click\"}\n                >\n                  <Input.Search\n                    readOnly\n                    onSearch={onSearch}\n                    className={css.jsTextarea}\n                    value={jsText}\n                    enterButton=\"导入\"\n                    placeholder={\n                      \"输入 JS 请求脚本，具体可以使用 Chrome Network 中的 Copy as fetch\"\n                    }\n                  />\n                </Popover>\n              </div>\n            )}\n\n            {/*<Tooltip title={'设置'}>*/}\n            {/*  <Popover placement=\"bottomRight\" title={'设置自定义请求'} content={(*/}\n            {/*    <TextArea style={{width: 400}} rows={10}*/}\n            {/*              placeholder={'输入 JS 请求脚本，具体可以使用 Chrome Network 中的 Copy as fetch'}/>*/}\n            {/*  )} trigger=\"click\">*/}\n            {/*    <div className={css.clickable} style={{color: '#fff'}}>*/}\n            {/*      <SettingOutlined/>*/}\n            {/*    </div>*/}\n            {/*  </Popover>*/}\n            {/*</Tooltip>*/}\n          </div>\n        </Header>\n        <Content style={{ padding: \"0 50px\" }} className={css.body}>\n          <Spin spinning={loading} wrapperClassName={css.loading} delay={400}>\n            <HomePage\n              type={transform.type}\n              config={config}\n              jsonText={jsonText}\n              onJsonTextChange={setJsonText}\n            />\n          </Spin>\n        </Content>\n      </Layout>\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"header\":\"App_header__2L3DO\",\"search\":\"App_search__13zFb\",\"jsTextareaWrapper\":\"App_jsTextareaWrapper__25Ez6\",\"jsTextarea\":\"App_jsTextarea__2yuDh\",\"btns\":\"App_btns__15KWL\",\"loading\":\"App_loading__3Rsj5\",\"clickable\":\"App_clickable__Fqvmh\",\"logo\":\"App_logo__2qPv-\",\"body\":\"App_body__2a4FT\",\"paramsEditor\":\"App_paramsEditor__oCSss\"};","/* eslint-disable */\nimport React, { useCallback, useRef } from \"react\";\nimport useUncontrolled from \"@rcp/use.uncontrolled\";\nimport JSZIP from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { CopyFilled, LoadingOutlined } from \"@ant-design/icons\";\n\nimport css from \"./style.module.scss\";\n\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/keybinding-vscode\";\nimport \"ace-builds/src-noconflict/ext-static_highlight\";\n\nimport copyText from \"copy-text-to-clipboard\";\nimport jsonlint from \"jsonlint-mod\";\nimport PromiseWorker from \"promise-worker\";\nimport TransformWorker from \"worker-loader!../../utils/transform-worker\";\n\nimport { Button, message, notification, Tabs, Tooltip } from \"antd\";\n\nconst worker = new TransformWorker();\nconst promiseWorker = new PromiseWorker(worker);\n\n// eslint-disable-next-line dot-notation\nwindow[\"jsonlint\"] = jsonlint; // 不能删除，json-lint有依赖\n\nconst FloatBtns = ({ text }) => {\n  const [copyStatus, setCopyStatus] = React.useState(\"\");\n\n  const timerRef = useRef(null);\n  const copy = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = null;\n    }\n    try {\n      copyText(text);\n      setCopyStatus(\"ok\");\n    } catch (e) {\n      setCopyStatus(\"fail\");\n    } finally {\n      timerRef.current = setTimeout(() => {\n        setCopyStatus();\n      }, 2000);\n    }\n  }, [text]);\n\n  return (\n    <div className={css.floatBtns}>\n      <Tooltip\n        onVisibleChange={(v) => {\n          if (!v) {\n            if (timerRef.current) {\n              clearTimeout(timerRef.current);\n              timerRef.current = null;\n            }\n            setCopyStatus();\n          }\n        }}\n        title={\n          !copyStatus ? \"复制\" : copyStatus === \"ok\" ? \"复制成功\" : \"复制失败\"\n        }\n      >\n        <Button icon={<CopyFilled />} size={\"small\"} type={'link'} onClick={copy} />\n      </Tooltip>\n    </div>\n  );\n};\n\nfunction HomePage({\n  type = \"to-ts\",\n  config,\n  defaultJsonText,\n  jsonText,\n  onJsonTextChange,\n}) {\n  const [jsonTextState, setJsonText] = useUncontrolled({\n    value: jsonText,\n    onChange: onJsonTextChange,\n    defaultValue: defaultJsonText || \"{}\",\n  });\n  const [result, setResult] = React.useState(\"\");\n  const [transforming, setTransforming] = React.useState(false);\n\n  // const isFirstRef = useRef(true);\n  React.useEffect(() => {\n    // if (isFirstRef.current) {\n    //   isFirstRef.current = false;\n    //   return;\n    // }\n    try {\n      const json = JSON.parse(jsonTextState);\n      if (json) {\n        setTransforming(true);\n        promiseWorker\n          .postMessage([type, json, config])\n          .then(function (response) {\n            setResult(response);\n          })\n          .catch((err) => {\n            if (err) {\n              console.error(err);\n              message.error(String(err));\n            }\n          })\n          .finally(() => setTransforming(false));\n      }\n    } catch (_) {\n      console.error(_);\n    }\n  }, [type, config, jsonTextState]);\n\n  return (\n    <div className={css.container}>\n      <AceEditor\n        className={css.jsonEditor}\n        mode=\"json\"\n        value={jsonTextState}\n        theme=\"github\"\n        onChange={(v) => setJsonText(v)}\n        editorProps={{ $blockScrolling: true }}\n      />\n\n      {transforming && (\n        <div className={css.transfroming}>\n          <LoadingOutlined style={{ fontSize: 20, color: \"#1890ff\" }} />\n        </div>\n      )}\n\n      {typeof result === \"string\" && (\n        <div className={css.wrapperResult}>\n          <AceEditor\n            className={css.resultEditor}\n            mode=\"typescript\"\n            value={result}\n            theme=\"github\"\n            onChange={(v) => setResult(v)}\n            editorProps={{ $blockScrolling: true }}\n          />\n          <FloatBtns text={result} />\n        </div>\n      )}\n\n      {typeof result === \"object\" && result && (\n        <div className={css.wrapperResult}>\n          <Tabs\n            size={\"small\"}\n            tabBarGutter={0}\n            tabPosition={\"left\"}\n            defaultActiveKey={Object.keys(result)[0]}\n            tabBarExtraContent={\n              <Tooltip title={\"下载 ZIP\"}>\n                <Button\n                  size={\"small\"}\n                  type={\"primary\"}\n                  onClick={() => {\n                    const zip = new JSZIP();\n                    Object.keys(result).forEach((name) => {\n                      zip.file(name, result[name]);\n                    });\n\n                    zip\n                      .generateAsync({ type: \"blob\" })\n                      .then(function (content) {\n                        saveAs(content, \"transform-json-schema-result.zip\");\n                      });\n                  }}\n                >\n                  下载\n                </Button>\n              </Tooltip>\n            }\n          >\n            {Object.keys(result).map((fileName) => (\n              <Tabs.TabPane tab={fileName} key={fileName}>\n                <AceEditor\n                  className={css.subEditor}\n                  mode=\"typescript\"\n                  value={result[fileName]}\n                  theme=\"github\"\n                  onChange={(value) =>\n                    setResult({ ...result, [fileName]: value })\n                  }\n                  editorProps={{ $blockScrolling: true }}\n                />\n                <FloatBtns text={result[fileName]} />\n              </Tabs.TabPane>\n            ))}\n          </Tabs>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"style_result__sHPbb\",\"floatBtns\":\"style_floatBtns__3vRWO\",\"container\":\"style_container__TPmxo\",\"transfroming\":\"style_transfroming__umP0B\",\"jsonEditor\":\"style_jsonEditor__dG7Rz\",\"resultEditor\":\"style_resultEditor__1ZfRb\",\"wrapperResult\":\"style_wrapperResult__2yfYP\",\"subEditor\":\"style_subEditor__39vb3\"};","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/transform-worker.dfd8334f.worker.js\");\n}\n","import { dirname, basename, extname } from 'path'\nconst modulesRequire = require.context('null-loader!../../../src/shortcut', false, /\\.js$/)\n\nconst keys = modulesRequire.keys()\n\nconst modules = keys.reduce((modules, name) => {\n  modules[basename(name, extname(name))] = modulesRequire(name)\n  return modules\n}, {})\n\nexport default modules\n","var map = {\n\t\"./to-swagger-axios.js\": 441,\n\t\"./to-ts.js\": 442,\n\t\"./to-vm.js\": 443,\n\t\"./to-walli.js\": 444\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 440;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    // import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n    //   getCLS(onPerfEntry);\n    //   getFID(onPerfEntry);\n    //   getFCP(onPerfEntry);\n    //   getLCP(onPerfEntry);\n    //   getTTFB(onPerfEntry);\n    // });\n  }\n};\n\nexport default reportWebVitals;\n"],"sourceRoot":""}